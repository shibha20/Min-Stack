class MinStack(object):


    def __init__(self):
        self.st=[]
        self.minstack = []
        

    def push(self, val):
        self.st.append(val)
  
        if not self.minstack or  val <= self.minstack[-1]:
                self.minstack.append(val)
        """
        :type val: int
        :rtype: None
        """
        

    def pop(self):
        """
        :rtype: None
        """
        if self.st:
            if self.st[-1] == self.minstack[-1]:
                self.minstack.pop()
            self.st.pop()
        

    def top(self):
        """
        :rtype: int
        """
        if self.st:
            return self.st[-1]
        
        

    def getMin(self):
        """
        :rtype: int
        """
        if self.minstack:
            return self.minstack[-1]
    
        


# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(val)
# obj.pop()
# param_3 = obj.top()
# param_4 = obj.getMin()
